// Print out the topics
// You should see no topics listed
$ docker exec -t kafka-docker_kafka_1 \
  kafka-topics.sh \
    --bootstrap-server :9092 \
    --list

// Create a topic t1
$ docker exec -t kafka-docker_kafka_1 \
  kafka-topics.sh \
    --bootstrap-server :9092 \
    --create \
    --topic t1 \
    --partitions 3 \
    --replication-factor 1

// Describe topic t1
$ docker exec -t kafka-docker_kafka_1 \
  kafka-topics.sh \
    --bootstrap-server :9092 \
    --describe \
    --topic t1
Topic:t1	PartitionCount:3	ReplicationFactor:1	Configs:segment.bytes=1073741824
	Topic: t1	Partition: 0	Leader: 1001	Replicas: 1001	Isr: 1001
	Topic: t1	Partition: 1	Leader: 1001	Replicas: 1001	Isr: 1001
	Topic: t1	Partition: 2	Leader: 1001	Replicas: 1001	Isr: 1001

// Connect with the Kafka console consumer in another terminal
$ docker exec -t kafka-docker_kafka_1 \
  kafka-console-consumer.sh \
    --bootstrap-server :9092 \
    --group jacek-japila-pl \
    --topic t1

// Connect with the Kafka console producer in one terminal
$ docker exec -it kafka-docker_kafka_1 \
  kafka-console-producer.sh \
    --broker-list :9092 \
    --topic t1

// Type a message in producer window to see the message printed out in consumer's
// Observe the logs of the running docker-compose up (with no -d)
// Or use docker logs -f kafka-docker_kafka_1

// Ctrl-C to shut down all the processes

// You may also consider removing the containers
// so you always start afresh
// docker-compose rm